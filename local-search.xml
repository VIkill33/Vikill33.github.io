<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux服务器定时执行Python脚本</title>
    <link href="/2022/05/31/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8CPython%E8%84%9A%E6%9C%AC/"/>
    <url>/2022/05/31/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8CPython%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<aside>💡 **目标：在 centos 7 服务器上，使用 crontab 命令让系统在指定时间定时执行脚本**</aside><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><p>一台 centos 7 服务器</p></li><li><p>在服务器上安装 git</p><p>  <a href="https://www.notion.so/git-9448948f071043f8813abdbbfce0f9a1">在云服务器安装git</a></p></li><li><p>事先编写好的脚本，并且已经部署到 github 上</p></li></ul><h2 id="为服务器安装-Python3-解释器"><a href="#为服务器安装-Python3-解释器" class="headerlink" title="为服务器安装 Python3 解释器"></a>为服务器安装 Python3 解释器</h2><ul><li><p>依次运行以下 11 条命令</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y groupinstall <span class="hljs-string">&quot;Development tools&quot;</span><br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install libffi-devel -y<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -xvJf Python-3.7.0.tar.xz<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /usr/local/python3<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> Python-3.7.0<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --prefix=/usr/local/python3<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make &amp;&amp; make install<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /usr/local/python3/bin/python3 /usr/local/bin/python3<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /usr/local/python3/bin/pip3 /usr/local/bin/pip3<br></code></pre></td></tr></table></figure></li><li><p>验证是否成功</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 -V<br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip3 -V<br></code></pre></td></tr></table></figure></li></ul><h2 id="将-github-上的项目克隆到服务器上"><a href="#将-github-上的项目克隆到服务器上" class="headerlink" title="将 github 上的项目克隆到服务器上"></a>将 github 上的项目克隆到服务器上</h2><p>这里以将项目部署到服务器根目录下为例：</p><ol><li><p>回到服务器根目录。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~<br></code></pre></td></tr></table></figure></li><li><p>运行 clone 命令。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">clone</span> git@github.com:用户名/项目名.git<br></code></pre></td></tr></table></figure></li></ol><p>此时项目已经存放在根目录下的项目名文件夹内了。</p><h2 id="使用-crontab-命令定时执行脚本"><a href="#使用-crontab-命令定时执行脚本" class="headerlink" title="使用 crontab 命令定时执行脚本"></a>使用 crontab 命令定时执行脚本</h2><ol><li><p>使用 vim 打开 crontab ， 如图所示。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">crontab -e<br></code></pre></td></tr></table></figure> <img src="/2022/05/31/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8CPython%E8%84%9A%E6%9C%AC/vim.png" class=""></li><li><p>编辑 crontab </p><p> 在 crontab 中添加一行命令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">10 0 * * * 绝对路径/pyhton3 绝对路径/项目名.py<br></code></pre></td></tr></table></figure> <aside> 💡 关于 crontab 的详细介绍见 [crontab命令教程](https://www.cnblogs.com/peida/archive/2013/01/08/2850483.html)  </aside>  <aside> 💡 注意：不仅在 crontab 中文件名要取绝对路径，py 源文件中如出现路径也必须是完整的（在服务器上的）绝对路径  </aside></li></ol><p>现在，在每天的 0：10 服务器就会自动运行 python 脚本了</p><p>如果脚本没有正常运行的话可以<a href="https://cloud.tencent.com/developer/article/1594636">查看日志</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">tail</span> -f /var/spool/mail/root<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>about</title>
    <link href="/2022/05/30/about/"/>
    <url>/2022/05/30/about/</url>
    
    <content type="html"><![CDATA[<p>大家好，这是我的第一篇文章</p><img src="/2022/05/30/about/beauty.JPEG" class=""><p>上面是我最喜欢的咩咩的照片</p>]]></content>
    
    
    <categories>
      
      <category>关于</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/05/29/hello-world/"/>
    <url>/2022/05/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
